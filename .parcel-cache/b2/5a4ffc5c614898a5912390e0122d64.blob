var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _hooksUseFetch = require("./hooks/useFetch");
  var _d3Scale = require("d3-scale");
  var _d3Array = require("d3-array");
  var _jsxFileName = "/Users/isabellaabulhosn/Desktop/cloned-example/src/App.js", _s = $RefreshSig$();
  // import { geoNaturalEath1 } from "d3-geo-projection";
  // import { scale } from "vega";
  const App = () => {
    _s();
    const [data, loading] = _hooksUseFetch.useFetch("https://raw.githubusercontent.com/isabellaabulhosn/cloned-example/main/montana.csv");
    const dataSmallSample = data.slice(0, 5000);
    // const randomSmallSample = _.sample(data, 5000)
    const TMAXextent = _d3Array.extent(dataSmallSample, d => {
      return +d.TMAX;
    });
    const AWNDextent = _d3Array.extent(data, d => {
      return +d.AWND;
    });
    const SNOWextent = _d3Array.extent(data, d => {
      return +d.SNOW;
    });
    const size = 300;
    const margin = 25;
    const axisTextAlignmentFactor = 3;
    const maxValueOfTMAX = _d3Array.max([1, 2, 3]);
    const yScale = _d3Scale.scaleLinear().domain(TMAXextent).// unit: km
    range([size - margin, size - 50]);
    // unit: pixels
    const yScaleWind = _d3Scale.scaleLinear().domain(AWNDextent).// unit: km
    range([size - margin, margin]);
    // unit: pixels
    const yScaleSnow = _d3Scale.scaleLinear().domain(SNOWextent).// unit: km
    range([size - margin, margin]);
    // unit: pixels
    _bins = _d3Array.bin().thresholds(15);
    tmaxBins = _bins(data.map(d => {
      return +d.SNWD;
    }));
    const histogramLeftPadding = 10;
    return (
      /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 55,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h1", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 56,
          columnNumber: 13
        }
      }, "Exploratory Data Analysis INFO 474 SP 2021"), /*#__PURE__*/_reactDefault.default.createElement("h2", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 57,
          columnNumber: 13
        }
      }, "Montana Weather Data"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 13
        }
      }, loading && "Loading data!"), /*#__PURE__*/_reactDefault.default.createElement("div", {
        id: "plot1",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60,
          columnNumber: 17
        }
      }, "Barcode Plot: Average Daily Wind Speed (mph)"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 61,
          columnNumber: 17
        }
      }, "Kalispell Glacier Airport vs. Missoula Intl Airport"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        width: size,
        height: size,
        style: {
          border: "1px solid black"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 62,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: 50,
        textAnchor: "end",
        y: size - margin + axisTextAlignmentFactor,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 64,
          columnNumber: 21
        }
      }, "0"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: 50,
        textAnchor: "end",
        y: margin + axisTextAlignmentFactor / 2,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 72,
          columnNumber: 21
        }
      }, "100"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size - 50,
        textAnchor: "end",
        y: size - margin + axisTextAlignmentFactor,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 80,
          columnNumber: 21
        }
      }, "0"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size - 50 + axisTextAlignmentFactor * 4,
        textAnchor: "end",
        y: margin + axisTextAlignmentFactor / 2,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 88,
          columnNumber: 21
        }
      }, "100"), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size / 4 - 5,
        y1: margin,
        x2: size / 4 - 10,
        y2: margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 96,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size / 4 - 5,
        y1: size - margin,
        x2: size / 4 - 10,
        y2: size - margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 103,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size - size / 4 + 10,
        y1: margin,
        x2: size - size / 4 + 5,
        y2: margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 110,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size - size / 4 + 10,
        y1: size - margin,
        x2: size - size / 4 + 5,
        y2: size - margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 117,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size / 4,
        textAnchor: "end",
        y: size - margin / 2,
        style: {
          fontSize: 5,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 124,
          columnNumber: 21
        }
      }, "Kallispell"), data.map((measurement, index) => {
        const highlight = measurement.station === "KALISPELL GLACIER AP";
        return (
          /*#__PURE__*/_reactDefault.default.createElement("line", {
            key: index,
            x1: size / 4,
            y1: yScaleWind(measurement.AWND),
            x2: size / 4 + 30,
            y2: yScaleWind(measurement.AWND),
            stroke: highlight ? "darkorange" : "steelblue",
            strokeOpacity: highlight ? 1 : 0.1,
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 133,
              columnNumber: 32
            }
          })
        );
      }), data.map((measurement, index) => {
        const highlight = measurement.station === "MISSOULA INTL AP";
        return (
          /*#__PURE__*/_reactDefault.default.createElement("line", {
            key: index,
            x1: size - size / 4 - 30,
            y1: yScaleWind(measurement.AWND),
            x2: size - size / 4,
            y2: yScaleWind(measurement.AWND),
            stroke: highlight ? "darkorange" : "steelblue",
            strokeOpacity: highlight ? 1 : 0.1,
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 144,
              columnNumber: 32
            }
          })
        );
      }))), /*#__PURE__*/_reactDefault.default.createElement("div", {
        id: "plot2",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 155,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 156,
          columnNumber: 17
        }
      }, "Barcode Plot: Average Snowfall (in)"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 157,
          columnNumber: 17
        }
      }, "Kalispell Glacier Airport vs. Missoula Intl Airport"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        width: size,
        height: size,
        style: {
          border: "1px solid black"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 158,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: 50,
        textAnchor: "end",
        y: size - margin + axisTextAlignmentFactor,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 160,
          columnNumber: 21
        }
      }, "0"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: 50,
        textAnchor: "end",
        y: margin + axisTextAlignmentFactor / 2,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 168,
          columnNumber: 21
        }
      }, "100"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size - 50,
        textAnchor: "end",
        y: size - margin + axisTextAlignmentFactor,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 176,
          columnNumber: 21
        }
      }, "0"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size - 50 + axisTextAlignmentFactor * 4,
        textAnchor: "end",
        y: margin + axisTextAlignmentFactor / 2,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 184,
          columnNumber: 21
        }
      }, "100"), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size / 4 - 5,
        y1: margin,
        x2: size / 4 - 10,
        y2: margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 192,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size / 4 - 5,
        y1: size - margin,
        x2: size / 4 - 10,
        y2: size - margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 199,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size - size / 4 + 10,
        y1: margin,
        x2: size - size / 4 + 5,
        y2: margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 206,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size - size / 4 + 10,
        y1: size - margin,
        x2: size - size / 4 + 5,
        y2: size - margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 213,
          columnNumber: 21
        }
      }), data.map((measurement, index) => {
        const highlight = measurement.station === "KALISPELL GLACIER AP";
        return (
          /*#__PURE__*/_reactDefault.default.createElement("line", {
            key: index,
            x1: size / 4,
            y1: yScaleSnow(measurement.SNOW),
            x2: size / 4 + 30,
            y2: yScaleSnow(measurement.SNOW),
            stroke: highlight ? "darkorange" : "steelblue",
            strokeOpacity: highlight ? 1 : 0.1,
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 221,
              columnNumber: 32
            }
          })
        );
      }), data.map((measurement, index) => {
        const highlight = measurement.station === "MISSOULA INTL AP";
        return (
          /*#__PURE__*/_reactDefault.default.createElement("line", {
            key: index,
            x1: size - size / 4 - 30,
            y1: yScaleSnow(measurement.SNOW),
            x2: size - size / 4,
            y2: yScaleSnow(measurement.SNOW),
            stroke: highlight ? "darkorange" : "steelblue",
            strokeOpacity: highlight ? 1 : 0.1,
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 232,
              columnNumber: 32
            }
          })
        );
      }))), /*#__PURE__*/_reactDefault.default.createElement("div", {
        id: "plot3",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 243,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 244,
          columnNumber: 17
        }
      }, "Scatterplot: Minimum vs. Maximum Temperature (F)"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 245,
          columnNumber: 17
        }
      }, "Focusing on Many Glacier"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        width: size,
        height: size,
        style: {
          border: "1px solid black"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 246,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("text", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 247,
          columnNumber: 21
        }
      }), data.map((measurement, index) => {
        if (measurement.station === "Many Glacier") {
          return null;
        }
        return (
          /*#__PURE__*/_reactDefault.default.createElement("circle", {
            key: index,
            cx: 125 + +measurement.TMIN,
            cy: size - margin - 75 - +measurement.TMAX,
            r: "1",
            fill: "rgba(27, 51, 71, .05)",
            stroke: "none",
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 253,
              columnNumber: 29
            }
          })
        );
      }), data.map((measurement, index) => {
        if (measurement.station !== "Many Glacier") {
          return null;
        }
        return (
          /*#__PURE__*/_reactDefault.default.createElement("circle", {
            key: index,
            cx: 125 + +measurement.TMIN,
            cy: size - margin - 75 - +measurement.TMAX,
            r: "1",
            fill: "rgba(100, 55, 0, 1)",
            stroke: "none",
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 267,
              columnNumber: 29
            }
          })
        );
      }))), /*#__PURE__*/_reactDefault.default.createElement("div", {
        id: "plot4",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 278,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 279,
          columnNumber: 17
        }
      }, "Scatterplot: Minimum vs. Maximum Temperature (F)"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 280,
          columnNumber: 17
        }
      }, "Focusing on Kalispell Glacier Airport"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        width: size,
        height: size,
        style: {
          border: "1px solid black"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 281,
          columnNumber: 17
        }
      }, data.map((measurement, index) => {
        if (measurement.station === "KALISPELL GLACIER AP") {
          return null;
        }
        return (
          /*#__PURE__*/_reactDefault.default.createElement("circle", {
            key: index,
            cx: 100 + +measurement.TMIN,
            cy: size - margin - 50 - +measurement.TMAX,
            r: "1",
            fill: "rgba(27, 51, 71, .05)",
            stroke: "none",
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 287,
              columnNumber: 29
            }
          })
        );
      }), data.map((measurement, index) => {
        if (measurement.station !== "KALISPELL GLACIER AP") {
          return null;
        }
        return (
          /*#__PURE__*/_reactDefault.default.createElement("circle", {
            key: index,
            cx: 100 + +measurement.TMIN,
            cy: size - margin - 50 - +measurement.TMAX,
            r: "1",
            fill: "rgba(100, 55, 0, 1)",
            stroke: "none",
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 301,
              columnNumber: 29
            }
          })
        );
      }))))
    );
  };
  _s(App, "Jm65JCcgUFoenM4DufkEA80vRVI=", false, function () {
    return [_hooksUseFetch.useFetch];
  });
  _c = App;
  exports.default = App;
  var _c;
  $RefreshReg$(_c, "App");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
