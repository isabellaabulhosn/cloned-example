var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _hooksUseFetch = require("./hooks/useFetch");
  var _d3Scale = require("d3-scale");
  var _d3Array = require("d3-array");
  var _jsxFileName = "/Users/isabellaabulhosn/Desktop/cloned-example/src/App.js", _s = $RefreshSig$();
  // import { geoNaturalEath1 } from "d3-geo-projection";
  // import { scale } from "vega";
  const App = () => {
    _s();
    const [data, loading] = _hooksUseFetch.useFetch("https://raw.githubusercontent.com/isabellaabulhosn/cloned-example/main/montana.csv");
    const dataSmallSample = data.slice(0, 5000);
    const TMAXextent = _d3Array.extent(dataSmallSample, d => {
      return +d.TMAX;
    });
    const AWNDextent = _d3Array.extent(data, d => {
      return +d.AWND;
    });
    const SNOWextent = _d3Array.extent(data, d => {
      return +d.SNOW;
    });
    const size = 500;
    const margin = 25;
    const axisTextAlignmentFactor = 3;
    const maxValueOfTMAX = _d3Array.max([1, 2, 3]);
    const yScale = _d3Scale.scaleLinear().domain(TMAXextent).// unit: km
    range([size - margin, size - 50]);
    // unit: pixels
    const yScaleWind = _d3Scale.scaleLinear().domain(AWNDextent).// unit: km
    range([size - margin, margin]);
    // unit: pixels
    const yScaleSnow = _d3Scale.scaleLinear().domain(SNOWextent).// unit: km
    range([size - margin, margin]);
    // unit: pixels
    _bins = _d3Array.bin().thresholds(15);
    tmaxBins = _bins(data.map(d => {
      return +d.SNWD;
    }));
    const histogramLeftPadding = 10;
    return (
      /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 54,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h1", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 55,
          columnNumber: 13
        }
      }, "Exploratory Data Analysis INFO 474 SP 2021"), /*#__PURE__*/_reactDefault.default.createElement("h2", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 56,
          columnNumber: 13
        }
      }, "Montana Weather Data"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 57,
          columnNumber: 13
        }
      }, loading && "Loading data!"), /*#__PURE__*/_reactDefault.default.createElement("div", {
        id: "plot1",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59,
          columnNumber: 17
        }
      }, "Barcode Plot: Average Daily Wind Speed (mph)"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60,
          columnNumber: 17
        }
      }, "Kalispell Glacier Airport vs. Missoula Intl Airport"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        width: size,
        height: size,
        style: {
          border: "1px solid black"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 61,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: 50,
        textAnchor: "end",
        y: size - margin + axisTextAlignmentFactor,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 63,
          columnNumber: 21
        }
      }, "0"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: 50,
        textAnchor: "end",
        y: margin + axisTextAlignmentFactor / 2,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 71,
          columnNumber: 21
        }
      }, "37"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size - 50,
        textAnchor: "end",
        y: size - margin + axisTextAlignmentFactor,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 79,
          columnNumber: 21
        }
      }, "0"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size - 50 + axisTextAlignmentFactor * 4,
        textAnchor: "end",
        y: margin + axisTextAlignmentFactor / 2,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 87,
          columnNumber: 21
        }
      }, "37"), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size / 4 - 5,
        y1: margin,
        x2: size / 4 - 10,
        y2: margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 95,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size / 4 - 5,
        y1: size - margin,
        x2: size / 4 - 10,
        y2: size - margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 102,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size - size / 4 + 10,
        y1: margin,
        x2: size - size / 4 + 5,
        y2: margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 109,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size - size / 4 + 10,
        y1: size - margin,
        x2: size - size / 4 + 5,
        y2: size - margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 116,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size / 4 + 30,
        textAnchor: "end",
        y: size - margin / 2.5,
        style: {
          fontSize: 8,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 123,
          columnNumber: 21
        }
      }, "Kallispell"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size - size / 4,
        textAnchor: "end",
        y: size - margin / 2.5,
        style: {
          fontSize: 8,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 131,
          columnNumber: 21
        }
      }, "Missoula"), data.map((measurement, index) => {
        const highlight = measurement.station === "KALISPELL GLACIER AP";
        return (
          /*#__PURE__*/_reactDefault.default.createElement("line", {
            key: index,
            x1: size / 4,
            y1: yScaleWind(measurement.AWND),
            x2: size / 4 + 30,
            y2: yScaleWind(measurement.AWND),
            stroke: highlight ? "darkorange" : "steelblue",
            strokeOpacity: highlight ? 1 : 0.1,
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 140,
              columnNumber: 32
            }
          })
        );
      }), data.map((measurement, index) => {
        const highlight = measurement.station === "MISSOULA INTL AP";
        return (
          /*#__PURE__*/_reactDefault.default.createElement("line", {
            key: index,
            x1: size - size / 4 - 30,
            y1: yScaleWind(measurement.AWND),
            x2: size - size / 4,
            y2: yScaleWind(measurement.AWND),
            stroke: highlight ? "darkorange" : "steelblue",
            strokeOpacity: highlight ? 1 : 0.1,
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 151,
              columnNumber: 32
            }
          })
        );
      })), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 161,
          columnNumber: 17
        }
      }, "I wanted to use this data to compare the Kalispell Glacier Airport and the Missoula International Airport.  These are the 2 airports I would fly into when I go to Montana, and I was wondering if I could gain some insight into which have better or worse weather which could be tied into flight times or delays."), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 162,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("strong", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 162,
          columnNumber: 20
        }
      }, "Insight #1"), ": Compared to all of the weather stations in Montana, the airport at Kalispell has average daily wind speeds mostly on the lower end.  The highest wind speeds the Kalispell airports get are around 15mph."), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 163,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("strong", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 163,
          columnNumber: 20
        }
      }, "Insight #2"), ": Compared to all of the weather stations in Montant, the airport in Missoula has fairly low average daily wind speeds, but one day had a pretty high wind speed of about 20ish mph."), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 164,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("strong", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 164,
          columnNumber: 20
        }
      }, "Insight #3"), ": In comparison to each other, it seems the Missoula airport has lower wind speeds on average, aside from a few outliers.")), /*#__PURE__*/_reactDefault.default.createElement("div", {
        id: "plot2",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 166,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 167,
          columnNumber: 17
        }
      }, "Barcode Plot: Average Snowfall (in)"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 168,
          columnNumber: 17
        }
      }, "Kalispell Glacier Airport vs. Missoula Intl Airport"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        width: size,
        height: size,
        style: {
          border: "1px solid black"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 169,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: 50,
        textAnchor: "end",
        y: size - margin + axisTextAlignmentFactor,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 171,
          columnNumber: 21
        }
      }, "0"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: 50,
        textAnchor: "end",
        y: margin + axisTextAlignmentFactor / 2,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 179,
          columnNumber: 21
        }
      }, "11"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size - 50,
        textAnchor: "end",
        y: size - margin + axisTextAlignmentFactor,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 187,
          columnNumber: 21
        }
      }, "0"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size - 50 + axisTextAlignmentFactor * 4,
        textAnchor: "end",
        y: margin + axisTextAlignmentFactor / 2,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 195,
          columnNumber: 21
        }
      }, "11"), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size / 4 - 5,
        y1: margin,
        x2: size / 4 - 10,
        y2: margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 203,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size / 4 - 5,
        y1: size - margin,
        x2: size / 4 - 10,
        y2: size - margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 210,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size - size / 4 + 10,
        y1: margin,
        x2: size - size / 4 + 5,
        y2: margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 217,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: size - size / 4 + 10,
        y1: size - margin,
        x2: size - size / 4 + 5,
        y2: size - margin,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 224,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size / 4 + 30,
        textAnchor: "end",
        y: size - margin / 2.5,
        style: {
          fontSize: 8,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 231,
          columnNumber: 21
        }
      }, "Kallispell"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size - size / 4,
        textAnchor: "end",
        y: size - margin / 2.5,
        style: {
          fontSize: 8,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 239,
          columnNumber: 21
        }
      }, "Missoula"), data.map((measurement, index) => {
        const highlight = measurement.station === "KALISPELL GLACIER AP";
        return (
          /*#__PURE__*/_reactDefault.default.createElement("line", {
            key: index,
            x1: size / 4,
            y1: yScaleSnow(measurement.SNOW),
            x2: size / 4 + 30,
            y2: yScaleSnow(measurement.SNOW),
            stroke: highlight ? "darkorange" : "steelblue",
            strokeOpacity: highlight ? 1 : 0.1,
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 248,
              columnNumber: 32
            }
          })
        );
      }), data.map((measurement, index) => {
        const highlight = measurement.station === "MISSOULA INTL AP";
        return (
          /*#__PURE__*/_reactDefault.default.createElement("line", {
            key: index,
            x1: size - size / 4 - 30,
            y1: yScaleSnow(measurement.SNOW),
            x2: size - size / 4,
            y2: yScaleSnow(measurement.SNOW),
            stroke: highlight ? "darkorange" : "steelblue",
            strokeOpacity: highlight ? 1 : 0.1,
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 259,
              columnNumber: 32
            }
          })
        );
      })), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 269,
          columnNumber: 17
        }
      }, "I next wanted to look at average snowfall which has impacted my flights' landing times before."), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 270,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("strong", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 270,
          columnNumber: 20
        }
      }, "Insight #4"), ": Compared to all of the weather stations in Montana, the airport at Kalispell got the highest average snowfall in a day."), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 271,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("strong", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 271,
          columnNumber: 20
        }
      }, "Insight #5"), ": Compared to all of the weather stations in Montant, the airport in Missoula seems like it gets a consistent amount of snow.  Only a few other weather stations are getting more average snowfall."), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 272,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("strong", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 272,
          columnNumber: 20
        }
      }, "Insight #6"), ": In comparison to each other, based on this data it seems like there isn't a huge difference in snowfall between the two airports, aside from the one day Kalispell got the highest snowfall.")), /*#__PURE__*/_reactDefault.default.createElement("div", {
        id: "plot3",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 274,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 275,
          columnNumber: 17
        }
      }, "Scatterplot: Minimum vs. Maximum Temperature (F)"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 276,
          columnNumber: 17
        }
      }, "Focusing on Many Glacier"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        width: size,
        height: size,
        style: {
          border: "1px solid black"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 277,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: margin * 2,
        y1: margin * 3,
        x2: margin * 2,
        y2: size - margin * 2,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 279,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: margin * 2,
        y1: size - margin * 2,
        x2: size - margin * 2,
        y2: size - margin * 2,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 286,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: margin * 2 - axisTextAlignmentFactor,
        textAnchor: "end",
        y: size - margin * 2 + axisTextAlignmentFactor * 2,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 293,
          columnNumber: 21
        }
      }, "-40"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: margin * 2 - axisTextAlignmentFactor * 2,
        textAnchor: "end",
        y: margin * 3 + axisTextAlignmentFactor * 2,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 301,
          columnNumber: 21
        }
      }, "110"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size - margin * 2,
        textAnchor: "end",
        y: size - margin * 2 + axisTextAlignmentFactor * 4,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 309,
          columnNumber: 21
        }
      }, "100"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size / 2,
        textAnchor: "end",
        y: size - margin * 2 + axisTextAlignmentFactor * 4,
        style: {
          fontSize: 8,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 317,
          columnNumber: 21
        }
      }, "Min Temp"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: margin * 2 - axisTextAlignmentFactor,
        textAnchor: "end",
        y: size / 2,
        style: {
          fontSize: 8,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 325,
          columnNumber: 21
        }
      }, "Max Temp"), data.map((measurement, index) => {
        if (measurement.station === "Many Glacier") {
          return null;
        }
        return (
          /*#__PURE__*/_reactDefault.default.createElement("circle", {
            key: index,
            cx: 125 + +measurement.TMIN,
            cy: size - margin - 75 - +measurement.TMAX,
            r: "1",
            fill: "rgba(27, 51, 71, .05)",
            stroke: "none",
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 337,
              columnNumber: 29
            }
          })
        );
      }), data.map((measurement, index) => {
        if (measurement.station !== "Many Glacier") {
          return null;
        }
        return (
          /*#__PURE__*/_reactDefault.default.createElement("circle", {
            key: index,
            cx: 125 + +measurement.TMIN,
            cy: size - margin - 75 - +measurement.TMAX,
            r: "1",
            fill: "rgba(100, 0, 0, 1)",
            stroke: "none",
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 351,
              columnNumber: 29
            }
          })
        );
      })), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 361,
          columnNumber: 17
        }
      }, "I also wanted to look into the temperatures of two different places in Glacier National Park.  It is so big and I know the temperatures can drastically vary."), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 362,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("strong", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 362,
          columnNumber: 20
        }
      }, "Insight #7"), ": This graph was slightly hard to get the axes because the minimum temperatures weren't 0.  The ranges of TMAX was about -10 to 110.  The ranges of TMIN were about -35 to 80."), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 363,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("strong", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 363,
          columnNumber: 20
        }
      }, "Insight #8"), ": You can see Many Glacier has some of the lowest temperatures compared to the rest of Montana.  There are a few extreme outliers.")), /*#__PURE__*/_reactDefault.default.createElement("div", {
        id: "plot4",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 365,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 366,
          columnNumber: 17
        }
      }, "Scatterplot: Minimum vs. Maximum Temperature (F)"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 367,
          columnNumber: 17
        }
      }, "Focusing on Kalispell Glacier Airport"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        width: size,
        height: size,
        style: {
          border: "1px solid black"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 368,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: margin * 2,
        y1: margin * 3,
        x2: margin * 2,
        y2: size - margin * 2,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 370,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("line", {
        x1: margin * 2,
        y1: size - margin * 2,
        x2: size - margin * 2,
        y2: size - margin * 2,
        stroke: "black",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 377,
          columnNumber: 21
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: margin * 2 - axisTextAlignmentFactor,
        textAnchor: "end",
        y: size - margin * 2 + axisTextAlignmentFactor * 2,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 384,
          columnNumber: 21
        }
      }, "-40"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: margin * 2 - axisTextAlignmentFactor * 2,
        textAnchor: "end",
        y: margin * 3 + axisTextAlignmentFactor * 2,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 392,
          columnNumber: 21
        }
      }, "110"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size - margin * 2,
        textAnchor: "end",
        y: size - margin * 2 + axisTextAlignmentFactor * 4,
        style: {
          fontSize: 10,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 400,
          columnNumber: 21
        }
      }, "100"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: size / 2,
        textAnchor: "end",
        y: size - margin * 2 + axisTextAlignmentFactor * 4,
        style: {
          fontSize: 8,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 408,
          columnNumber: 21
        }
      }, "Min Temp"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: margin * 2 - axisTextAlignmentFactor,
        textAnchor: "end",
        y: size / 2,
        style: {
          fontSize: 8,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 416,
          columnNumber: 21
        }
      }, "Max Temp"), data.map((measurement, index) => {
        if (measurement.station === "KALISPELL GLACIER AP") {
          return null;
        }
        return (
          /*#__PURE__*/_reactDefault.default.createElement("circle", {
            key: index,
            cx: 125 + +measurement.TMIN,
            cy: size - margin - 75 - +measurement.TMAX,
            r: "1",
            fill: "rgba(27, 51, 71, .05)",
            stroke: "none",
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 428,
              columnNumber: 29
            }
          })
        );
      }), data.map((measurement, index) => {
        if (measurement.station !== "KALISPELL GLACIER AP") {
          return null;
        }
        return (
          /*#__PURE__*/_reactDefault.default.createElement("circle", {
            key: index,
            cx: 125 + +measurement.TMIN,
            cy: size - margin - 75 - +measurement.TMAX,
            r: "1",
            fill: "rgba(100, 0, 0, 1)",
            stroke: "none",
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 442,
              columnNumber: 29
            }
          })
        );
      })), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 452,
          columnNumber: 17
        }
      }, "This time I focused on the Kalispell Glacier Airport."), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 453,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("strong", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 453,
          columnNumber: 20
        }
      }, "Insight #9"), ": I see that this weather station has a few outliers as well but less than Many Glacier."), /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 454,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("strong", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 454,
          columnNumber: 20
        }
      }, "Insight #10"), ": There is a more concentrated cluster of higher temperatures than at Many Glacier.")))
    );
  };
  _s(App, "Jm65JCcgUFoenM4DufkEA80vRVI=", false, function () {
    return [_hooksUseFetch.useFetch];
  });
  _c = App;
  exports.default = App;
  var _c;
  $RefreshReg$(_c, "App");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
